#!/usr/bin/env python3
# tcp port scan example with multi-threading
import threading
import socket
import sys
from queue import Queue

print_lock = threading.Lock()
q = Queue()

host = socket.gethostbyname(socket.gethostname())
ports = []


# tcp scan current port
def tcp_scan(port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        res = sock.connect_ex((host, port))
        if res == 0:
            ports.append(port)
        sock.close()
    except socket.error:
        print("failed connect to server :(")
        sys.exit()
    except KeyboardInterrupt:
        print("exit...")
        sys.exit()


def run():
    while True:
        # get the port
        p = q.get()
        tcp_scan(p)

        # lets workers say when a task is done
        q.task_done()


def main():
    # multithreading --> reducing execution time significantly
    for p in range(1000):
        thread = threading.Thread(target=run)
        thread.daemon = True
        thread.start()

    # put all the ports in the queue
    for p in range(1000):
        q.put(p)

    # block the main threads until the workers have processed everything that's in the queue
    q.join()


if __name__ == "__main__":
    main()
    for port in ports:
        print(f'port {port} is open for your service')
